// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String
  clerkId   String   @unique
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  subscription Billings?

  domains   Domain[]
  campaigns Campaign[]
}

model Domain {
  id      Int      @id @default(autoincrement())
  name    String
  icon    String
  slug    String
  user    User     @relation(fields: [userId], references: [id])
  userId  Int
  chatbot Chatbot?

  helpDesk        HelpDesk[]
  filterQuestions FilterQuestions[]
  Campaign        Campaign?         @relation(fields: [campaignId], references: [id])
  campaignId      Int?

  customer  Customer[]
  product   Product[]
  chatRooms ChatRoom[]
}

model Chatbot {
  id             Int     @id @default(autoincrement())
  welcomeMessage String? @default("Hey there, have a question ? Text us here")
  icon           String?
  background     String?
  textColor      String?
  helpDesk       Boolean @default(false)
  domain         Domain  @relation(fields: [domainId], references: [id])
  domainId       Int

  @@unique([domainId])
}

model Billings {
  id      Int   @id @default(autoincrement())
  plan    Plans @default(STANDARD)
  credits Int   @default(10)
  user    User  @relation(fields: [userId], references: [id])
  userId  Int

  @@unique([userId])
}

enum Plans {
  STANDARD
  PRO
  ULTIMATE
}

model HelpDesk {
  id       Int    @id @default(autoincrement())
  question String
  answer   String
  domain   Domain @relation(fields: [domainId], references: [id])
  domainId Int
}

model FilterQuestions {
  id       Int     @id @default(autoincrement())
  question String
  answer   String?

  domain   Domain @relation(fields: [domainId], references: [id])
  domainId Int
}

model CustomerResponse {
  id       Int     @id @default(autoincrement())
  question String
  answer   String?

  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
}

model Customer {
  id    Int     @id @default(autoincrement())
  email String?

  questions CustomerResponse[]

  chatRoom ChatRoom[]

  booking Bookings[]

  Domain   Domain? @relation(fields: [domainId], references: [id])
  domainId Int
}

model Bookings {
  id         Int       @id @default(autoincrement())
  date       DateTime
  slot       String
  email      String
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int
  domainId   String?   @db.Uuid
  createdAt  DateTime  @default(now())
}

model ChatRoom {
  id         Int       @id @default(autoincrement())
  live       Boolean   @default(false)
  mailed     Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?
  domain   Domain @relation(fields: [domainId], references: [id])
  domainId Int

  message ChatMessage[]
}

model ChatMessage {
  id         Int       @id @default(autoincrement())
  message    String
  role       Role?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  ChatRoom   ChatRoom? @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int
  seen       Boolean   @default(false)
}

enum Role {
  user
  assistant
}

model Campaign {
  id        Int      @id @default(autoincrement())
  name      String
  customers String[]
  domain    Domain[]
  template  String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  price     Int
  image     String
  createdAt DateTime @default(now())
  Domain    Domain?  @relation(fields: [domainId], references: [id])
  domainId  Int
}
